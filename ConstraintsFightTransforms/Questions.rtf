{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red224\green223\blue224;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 Description of project\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\b0 \cf0 The storyboard shows one TransformsViewController object containing six UILabels arranged as three pairs. Each pair of views is constrained for width and height and by leading edge to superview and top space to top layout. In TransformsViewController viewDidLoad: a further six objects are configured as three pairs. The object of the project is to show the different effects of transforms on views with constraints and views positioned by frame alone.\
\

\b Right side
\b0 : Views are affected as would be expected. \
\
The red view is translated with tx = -20 and ty = 20:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \CocoaLigature0     \cf0 \CocoaLigature1 codeTranslatedView.transform = CGAffineTransformMakeTranslation(-20.0f, 20.0f);\cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \CocoaLigature1 The view is moved 20 points left and 20 points down as expected.
\f1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 The yellow view has a rotation of 0.66f * M_PI_2 applied: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \CocoaLigature0     \cf0 \CocoaLigature1 codeRotatedView.transform = CGAffineTransformMakeRotation(0.66f*M_PI_2);\cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \CocoaLigature1 The yellow view is rotated around its center as expected.\

\f1 \cf2 \CocoaLigature0 \

\f0 \cf0 \CocoaLigature1 The green view is scaled with a factor of 2.0 in both x and y axes:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \CocoaLigature0     \cf0 \CocoaLigature1 codeScaledView.transform = CGAffineTransformMakeScale(2.0f, 2.0f);\cf2 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \CocoaLigature1 The view expands in all directions while maintaining its center point.\
\

\b Left side
\b0 : Mixing constraints and transforms produces some unexpected results. \
\
The red view is translated with tx = -20 and ty = 20:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \CocoaLigature0     \cf0 \CocoaLigature1 self.translatedLabel.transform = CGAffineTransformMakeTranslation(-20.0f, 20.0f);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 The view is moved 10 points left and 10 points down.
\f1 \cf2 \CocoaLigature0 \

\f0 \cf0 \CocoaLigature1 \
The yellow view has a rotation of 0.66f * M_PI_2 applied: 
\f1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \CocoaLigature0     \cf0 \CocoaLigature1 self.rotatedLabel.transform = CGAffineTransformMakeRotation(0.66f*M_PI_2);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 The view appears to be rotated to the correct angle but the center of the view has moved.
\f1 \cf2 \CocoaLigature0 \
\cf0 \CocoaLigature1 \

\f0 The green view is scaled with a factor of 2.0 in both x and y axes:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \CocoaLigature0     \cf0 \CocoaLigature1 self.scaledLabel.transform = CGAffineTransformMakeScale(2.0f, 2.0f);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 The view is scaled correctly but the center of the view has moved.\
\
One theory to explain this behaviour would be that transforms are applied and then constraints are resolved. This explains the position of the Rotated and Scaled views but not the Translated view.\

\f1 \cf2 \CocoaLigature0 \

\f0\b \cf0 \CocoaLigature1 Questions\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\b0 \cf0 1. In the case of the red translated view in the left column how is the final translation tx=-10, ty=10 arrived at? This does not satisfy the constraints or the transform.\
2. In the case of the green scaled view in the left column why do the width and height constraints not override the scale transform?\
3. In general will constraints always be resolved after and override effects on view position deriving from a transform on the view's property?}